# Use `source .env` to load items, likely you actually want
# ```sh
# set -a  # Automatically export variables
# source .env
# set +a  # Stop auto-exporting
# <run some commands that need these vars>
# ```
#
# DO NOT wrap variables in quotes (THING=stuff is correct, not THING="stuff")
# Otherwise passing them to docker/podman may fail.
#
# ALL VARIABLES need to be \n terminated, no whitespace trimming happens
#
# ALL PATHS MUST BE A FULL PATH, used in scripts from different working directories,
# All relative paths will fail!

#### Dependent & Provider Settings

# To get a new token, see https://docs.celestia.org/tutorials/node-tutorial#auth-token
# Locally running nodes can use:
# celestia <node-type> auth admin --p2p.network <network>
CELESTIA_NODE_WRITE_TOKEN=
CELESTIA_DOCKER_IMAGE=ghcr.io/celestiaorg/celestia-node:v0.22.1-mocha
CELESTIA_NODE_SOCKET=127.0.0.1:26658
CELESTIA_RPC_PORT=26658
CELESTIA_P2P_PORT=2121
CELESTIA_CHAIN_ID=mocha-4
CELESTIA_NODE_TYPE=light
CELESTIA_NODE_NAME=celestia-light-mocha-4
CELESTIA_DATA_DIR=~/.celestia-light-mocha-4

#### Service Settings

# ONLY for use in development testing OR if running a node on localhost where https isn't required.
# NOTE: data sent to celestia can be http as we have already encrypted it,
#       but headers for the JWT to post to celestia are not encrypted without TLS!
UNSAFE_HTTP_UPSTREAM=true # comment this out or unset to force https

# 32 byte key used for ChaCha20 encryption
ENCRYPTION_KEY=

PDA_DB_PATH=/tmp/db-pda-service-testing
# Expects a socket with ip & port specified (not transport)
PDA_SOCKET=127.0.0.1:26657
# Explicit port for docker (can't compute with --env-file)
PDA_PORT=26657

# TLS - managed by Let's Encrypt `certbot`
# NOTE: you must update "your.domain.com" for PATHs below
TLS_EMAIL=you@example.com  # Your email for Let's Encrypt registration
TLS_DOMAIN=your.domain.com # Your fully qualified domain name
TLS_CERTS_PATH=/etc/letsencrypt/live/your.domian.com/fullchain.pem
TLS_KEY_PATH=/etc/letsencrypt/live/your.domian.com/privkey.pem

#### ZK Proof Settings

# ELFs running in any zkVM should be deterministically / reproducible with Docker, see:
# https://docs.succinct.xyz/docs/sp1/writing-programs/compiling#production-builds
# NOTE: MUST USE FULL PATH, used in scripts, so relative will fail.
ZK_PROGRAM_ELF_PATH=/home/your/project/pda-proxy/target/elf-compilation/riscv32im-succinct-zkvm-elf/release/chacha-program

# 'mock' for generating mock proofs locally, 'cpu', 'cuda', or 'network'
SP1_PROVER=cuda

# If using the proving network, set to your whitelisted private key. For more information, see:
# https://docs.succinct.xyz/docs/generating-proofs/prover-network/key-setup
NETWORK_RPC_URL=https://rpc.production.succinct.xyz
NETWORK_PRIVATE_KEY=

